// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Food {
  id            Int       @id @default(autoincrement())
  name          String
  category      String
  price         Int
  discountPrice Int?
  rating        Float?
  reviewCount   Int       @default(0)
  isNewArrival  Boolean   @default(false)
  stock         Int       @default(0)
  unit          String    @default("porsi")
  description   String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relations
  media         Media[]
  variants      Variant[]
}

model Variant {
  id            Int       @id @default(autoincrement())
  name          String
  price         Int
  discountPrice Int?
  stock         Int       @default(0)
  description   String?
  thumbnail     String?
  
  // Relations
  food          Food      @relation(fields: [foodId], references: [id], onDelete: Cascade)
  foodId        Int
  media         Media[]

  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Media {
  id            Int       @id @default(autoincrement())
  type          String    @default("image") // "image" or "video"
  url           String
  caption       String?
  thumbnail     String?
  
  // Relations to Food (optional)
  food          Food?     @relation(fields: [foodId], references: [id], onDelete: Cascade)
  foodId        Int?
  
  // Relations to Variant (optional)
  variant       Variant?  @relation(fields: [variantId], references: [id], onDelete: Cascade)
  variantId     Int?
  
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}